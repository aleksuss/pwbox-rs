(function() {var implementors = {};
implementors["pwbox"] = [{"text":"impl&lt;C, M&gt; Unpin for CipherWithMac&lt;C, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ErasedPwBox","synthetic":true,"types":[]},{"text":"impl Unpin for Eraser","synthetic":true,"types":[]},{"text":"impl Unpin for CipherOutput","synthetic":true,"types":[]},{"text":"impl Unpin for MacMismatch","synthetic":true,"types":[]},{"text":"impl Unpin for ScryptParams","synthetic":true,"types":[]},{"text":"impl Unpin for SensitiveData","synthetic":true,"types":[]},{"text":"impl&lt;K, C&gt; Unpin for PwBox&lt;K, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RestoredPwBox","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C&gt; Unpin for PwBoxBuilder&lt;'a, K, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EraseError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Scrypt","synthetic":true,"types":[]},{"text":"impl Unpin for PureCrypto","synthetic":true,"types":[]},{"text":"impl Unpin for Aes128Ctr","synthetic":true,"types":[]},{"text":"impl Unpin for Keccak256","synthetic":true,"types":[]},{"text":"impl Unpin for Scrypt","synthetic":true,"types":[]},{"text":"impl Unpin for Aes128Gcm","synthetic":true,"types":[]},{"text":"impl Unpin for RustCrypto","synthetic":true,"types":[]},{"text":"impl Unpin for Scrypt","synthetic":true,"types":[]},{"text":"impl Unpin for ScryptCompat","synthetic":true,"types":[]},{"text":"impl Unpin for XSalsa20Poly1305","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha20Poly1305","synthetic":true,"types":[]},{"text":"impl Unpin for Sodium","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()