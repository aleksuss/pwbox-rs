var searchIndex = JSON.parse('{\
"pwbox":{"doc":"Password-based encryption and decryption for Rust.","i":[[3,"CipherWithMac","pwbox","Authenticated cipher constructed from an ordinary…",null,null],[3,"ErasedPwBox","","Password-encrypted box suitable for (de)serialization.",null,null],[3,"Eraser","","Helper structure to convert password-encrypted boxes to a…",null,null],[3,"CipherOutput","","Output of a `Cipher`.",null,null],[12,"ciphertext","","Encrypted data. Has the same size as the original data.",0,null],[12,"mac","","Message authentication code for the `ciphertext`.",0,null],[3,"MacMismatch","","Error corresponding to MAC mismatch in [`Cipher::open()`].",null,null],[3,"ScryptParams","","`Scrypt` key derivation function parameterized as per the…",null,null],[3,"SensitiveData","","Container for data obtained after opening a `PwBox`.",null,null],[3,"PwBox","","Password-encrypted data.",null,null],[3,"RestoredPwBox","","Password-encrypted box restored after deserialization.",null,null],[3,"PwBoxBuilder","","Builder for `PwBox`es.",null,null],[4,"EraseError","","Errors occurring during erasing a `PwBox`.",null,null],[13,"NoKdf","","KDF used in the box is not registered with the `Eraser`.",1,null],[13,"NoCipher","","Cipher used in the box is not registered with the `Eraser`.",1,null],[13,"SerializeKdf","","Error serializing KDF params.",1,null],[4,"Error","","Errors occurring during `PwBox` operations.",null,null],[13,"NoCipher","","A cipher with the specified name is not registered.",2,null],[13,"NoKdf","","A key derivation function with the specified name is not…",2,null],[13,"KdfParams","","Failed to parse KDF parameters.",2,null],[13,"NonceLen","","Incorrect nonce length encountered.",2,null],[13,"MacLen","","Incorrect MAC length encountered.",2,null],[13,"SaltLen","","Incorrect salt length encountered.",2,null],[13,"MacMismatch","","Failed to verify MAC code.",2,null],[13,"DeriveKey","","Error during KDF invocation.",2,null],[11,"len","","Returns the byte size of the encrypted data stored in this…",3,[[]]],[11,"new","","Creates an `Eraser` with no ciphers or KDFs.",4,[[]]],[11,"add_cipher","","Adds a cipher.",4,[[]]],[11,"add_kdf","","Adds a key derivation function.",4,[[]]],[11,"add_suite","","Adds all KDFs and ciphers from the specified `Suite`.",4,[[]]],[11,"erase","","Converts a `pwbox` into serializable form.",4,[[["pwbox",3]],[["eraseerror",4],["erasedpwbox",3],["result",4]]]],[11,"restore","","Restores a `PwBox` from the serialized form.",4,[[["erasedpwbox",3]],[["result",4],["restoredpwbox",3],["error",4]]]],[11,"light","","Returns \\\"light\\\" `scrypt` parameters as used in Ethereum…",5,[[]]],[11,"custom","","Creates custom parameters for scrypt KDF.",5,[[]]],[0,"pure","","Pure Rust crypto primitives. Can be used if your app…",null,null],[3,"Scrypt","pwbox::pure","Pure Rust wrapper around scrypt.",null,null],[12,"0","","",6,null],[3,"PureCrypto","","Suite for password-based encryption provided by pure-Rust…",null,null],[0,"rcrypto","pwbox","`rust-crypto` cryptographic backend.",null,null],[3,"Aes128Ctr","pwbox::rcrypto","AES-128 cipher in CTR mode.",null,null],[3,"Keccak256","","MAC construction based on Keccak256 hash function.",null,null],[3,"Scrypt","","RustCrypto wrapper around scrypt.",null,null],[12,"0","","",7,null],[3,"Aes128Gcm","","AES-128 cipher in GCM mode.",null,null],[3,"RustCrypto","","Suite for password-based encryption provided by…",null,null],[0,"sodium","pwbox","Crypto primitives based on `libsodium`.",null,null],[3,"Scrypt","pwbox::sodium","`Scrypt` key derivation function parameterized as per…",null,null],[12,"opslimit","","Parameter determining the computational hardness of the KDF.",8,null],[12,"memlimit","","Parameter determining the RAM consumption of the KDF. The…",8,null],[3,"ScryptCompat","","Sodium wrapper around scrypt. Designed for compatibility…",null,null],[12,"0","","",9,null],[3,"XSalsa20Poly1305","","`xsalsa20` symmetric cipher with `poly1305` MAC.",null,null],[3,"ChaCha20Poly1305","","`ChaCha20` symmetric cipher with `poly1305` MAC.",null,null],[3,"Sodium","","Suite for password-based encryption provided by `libsodium`.",null,null],[11,"interactive","","Returns the \\\"interactive\\\" `scrypt` parameters as defined…",8,[[]]],[11,"light","","Returns \\\"light\\\" `scrypt` parameters as used in Ethereum…",8,[[]]],[11,"sensitive","","Returns the \\\"sensitive\\\" `scrypt` parameters as defined in…",8,[[]]],[8,"Mac","pwbox","Message authentication code.",null,null],[18,"KEY_LEN","","Byte size of a MAC key.",10,null],[18,"MAC_LEN","","Byte size of the MAC output.",10,null],[10,"digest","","Digests a message under the specified key.",10,[[],["vec",3]]],[8,"UnauthenticatedCipher","","Symmetric cipher without built-in authentication.",null,null],[18,"KEY_LEN","","Byte size of a key for this cipher.",11,null],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, IV) for…",11,null],[10,"seal_or_open","","Encrypts or decrypts `message` in place, given the `nonce`…",11,[[]]],[8,"Suite","","Cryptographic suite providing ciphers and KDFs for…",null,null],[16,"Cipher","","Recommended cipher for this suite.",12,null],[16,"DeriveKey","","Recommended KDF for this suite.",12,null],[11,"build_box","","Initializes a `PwBoxBuilder` with the recommended cipher…",12,[[],["pwboxbuilder",3]]],[10,"add_ciphers_and_kdfs","","Adds ciphers and KDFs from this suite into the specified…",12,[[["eraser",3]]]],[8,"Cipher","","Authenticated symmetric cipher.",null,null],[18,"KEY_LEN","","Byte size of a key.",13,null],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, or IV).",13,null],[18,"MAC_LEN","","Byte size of a message authentication code (MAC).",13,null],[10,"seal","","Encrypts `message` with the provided `key` and `nonce`.",13,[[],["cipheroutput",3]]],[10,"open","","Decrypts `encrypted` message with the provided `key` and…",13,[[["cipheroutput",3]],[["macmismatch",3],["result",4]]]],[8,"DeriveKey","","Key derivation function (KDF).",null,null],[10,"salt_len","","Returns byte size of salt supplied to the KDF.",14,[[]]],[10,"derive_key","","Derives a key from the given password and salt.",14,[[],[["result",4],["error",3]]]],[11,"new","","Creates a new box by using default settings of the…",15,[[],["result",6]]],[11,"len","","Returns the byte size of the encrypted data stored in this…",15,[[]]],[11,"open_into","","Decrypts the box into the specified container.",15,[[],[["error",4],["result",4]]]],[11,"open","","Decrypts the box and returns its contents. The returned…",15,[[],[["result",4],["sensitivedata",3],["error",4]]]],[11,"len","","Returns the byte size of the encrypted data stored in this…",16,[[]]],[11,"open_into","","Decrypts the box into the specified container.",16,[[],[["error",4],["result",4]]]],[11,"open","","Decrypts the box and returns its contents. The returned…",16,[[],[["result",4],["sensitivedata",3],["error",4]]]],[11,"new","","Initializes the builder with a random number generator.",17,[[]]],[11,"kdf","","Sets up a custom KDF.",17,[[]]],[11,"seal","","Creates a new `PwBox` with the specified password and…",17,[[],[["pwbox",3],["result",6]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","pwbox::pure","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","pwbox::rcrypto","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","pwbox::sodium","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"seal_or_open","pwbox::rcrypto","",22,[[]]],[11,"digest","","",23,[[],["vec",3]]],[11,"add_ciphers_and_kdfs","pwbox::pure","",21,[[["eraser",3]]]],[11,"add_ciphers_and_kdfs","pwbox::rcrypto","",25,[[["eraser",3]]]],[11,"add_ciphers_and_kdfs","pwbox::sodium","",28,[[["eraser",3]]]],[11,"salt_len","pwbox::pure","",6,[[]]],[11,"derive_key","","",6,[[],[["result",4],["error",3]]]],[11,"salt_len","pwbox::rcrypto","",7,[[]]],[11,"derive_key","","",7,[[],[["result",4],["error",3]]]],[11,"salt_len","pwbox::sodium","",8,[[]]],[11,"derive_key","","",8,[[],[["result",4],["error",3]]]],[11,"salt_len","","",9,[[]]],[11,"derive_key","","",9,[[],["result",6]]],[11,"seal","pwbox","Works as follows:",18,[[],["cipheroutput",3]]],[11,"open","","Works as follows:",18,[[["cipheroutput",3]],[["macmismatch",3],["result",4]]]],[11,"seal","pwbox::rcrypto","",24,[[],["cipheroutput",3]]],[11,"open","","",24,[[["cipheroutput",3]],[["macmismatch",3],["result",4]]]],[11,"seal","pwbox::sodium","",26,[[],["cipheroutput",3]]],[11,"open","","",26,[[["cipheroutput",3]],[["macmismatch",3],["result",4]]]],[11,"seal","","",27,[[],["cipheroutput",3]]],[11,"open","","",27,[[["cipheroutput",3]],[["macmismatch",3],["result",4]]]],[11,"drop","pwbox","",20,[[]]],[11,"from","pwbox::sodium","",8,[[["scryptcompat",3]],["scrypt",3]]],[11,"from","pwbox","",2,[[["macmismatch",3]]]],[11,"clone","","",3,[[],["erasedpwbox",3]]],[11,"clone","","",19,[[],["macmismatch",3]]],[11,"clone","","",0,[[],["cipheroutput",3]]],[11,"clone","","",20,[[],["sensitivedata",3]]],[11,"clone","","",5,[[],["scryptparams",3]]],[11,"clone","pwbox::pure","",6,[[],["scrypt",3]]],[11,"clone","pwbox::rcrypto","",7,[[],["scrypt",3]]],[11,"clone","","",24,[[],["aes128gcm",3]]],[11,"clone","pwbox::sodium","",8,[[],["scrypt",3]]],[11,"clone","","",9,[[],["scryptcompat",3]]],[11,"clone","","",26,[[],["xsalsa20poly1305",3]]],[11,"clone","","",27,[[],["chacha20poly1305",3]]],[11,"default","pwbox","",4,[[]]],[11,"default","","",19,[[],["macmismatch",3]]],[11,"default","","Returns the \\\"interactive\\\" `scrypt` parameters as defined…",5,[[]]],[11,"default","pwbox::pure","",6,[[],["scrypt",3]]],[11,"default","pwbox::rcrypto","",7,[[],["scrypt",3]]],[11,"default","","",24,[[],["aes128gcm",3]]],[11,"default","pwbox::sodium","Returns the \\\"interactive\\\" `scrypt` parameters as defined…",8,[[]]],[11,"default","","",9,[[],["scryptcompat",3]]],[11,"default","","",26,[[],["xsalsa20poly1305",3]]],[11,"default","","",27,[[],["chacha20poly1305",3]]],[11,"deref","pwbox","",20,[[]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","pwbox::pure","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","pwbox::rcrypto","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","pwbox::sodium","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","pwbox","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"source","","",1,[[],[["error",8],["option",4]]]],[11,"source","","",2,[[],[["error",8],["option",4]]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","pwbox::pure","",6,[[],["result",4]]],[11,"serialize","pwbox::rcrypto","",7,[[],["result",4]]],[11,"serialize","pwbox::sodium","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"deserialize","pwbox","",3,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","pwbox::pure","",6,[[],["result",4]]],[11,"deserialize","pwbox::rcrypto","",7,[[],["result",4]]],[11,"deserialize","pwbox::sodium","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[18,"KEY_LEN","pwbox","Byte size of a key for this cipher.",11,null],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, IV) for…",11,null],[18,"KEY_LEN","","Byte size of a MAC key.",10,null],[18,"MAC_LEN","","Byte size of the MAC output.",10,null],[11,"build_box","","Initializes a `PwBoxBuilder` with the recommended cipher…",12,[[],["pwboxbuilder",3]]],[18,"KEY_LEN","","Byte size of a key.",13,null],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, or IV).",13,null],[18,"MAC_LEN","","Byte size of a message authentication code (MAC).",13,null]],"p":[[3,"CipherOutput"],[4,"EraseError"],[4,"Error"],[3,"ErasedPwBox"],[3,"Eraser"],[3,"ScryptParams"],[3,"Scrypt"],[3,"Scrypt"],[3,"Scrypt"],[3,"ScryptCompat"],[8,"Mac"],[8,"UnauthenticatedCipher"],[8,"Suite"],[8,"Cipher"],[8,"DeriveKey"],[3,"PwBox"],[3,"RestoredPwBox"],[3,"PwBoxBuilder"],[3,"CipherWithMac"],[3,"MacMismatch"],[3,"SensitiveData"],[3,"PureCrypto"],[3,"Aes128Ctr"],[3,"Keccak256"],[3,"Aes128Gcm"],[3,"RustCrypto"],[3,"XSalsa20Poly1305"],[3,"ChaCha20Poly1305"],[3,"Sodium"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);